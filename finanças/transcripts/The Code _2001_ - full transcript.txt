Let me make an analogy between programs and recipes. A program is a lot like a recipe. Each one is a list of steps to be carried out with rules for how to tell when you're done or when to go back. At the end there's a certain result. If you cook you probably exchange recipes with your friends and you probably change recipes too. If you've made changes and you, and your friends, like eating it then you might give them the changed version of the recipe. Imagine a world where you can't change the recipe because somebody has gone out of his way to make it impossible. And imagine that if you share the recipe they will call you a pirate and try to put you in prison for years. I use the word "hacker" in its correct and original sense to describe someone who pursues computer programming as an artistic passion and who also is part of or identifies with the hacker culture which is historically programmers who produced the Internet, Linux and WWW. I guess you have to be a hacker to understand the specific mindset that is to rebel against the idea that the OS source code should be withheld. This open source attitude doesn't mix smoothly with the free market economy. It's also a threat to the traditional concepts of copyright and intellectual property. Companies like Microsoft that base their business on closed source code have tactively molded free software into an image of a monster of almost McCarthian proportions. All this made up one of the strangest success stories of the 1990's epitomized by the community's gifted leader and invaluable icon. He planted the seed for a movement whose ramifications continue to spread. Linus Torvalds has created a computer system that has struck- -the whole industry with amazement. Linux - an operating system that now runs 8 million of the world's computers. Wired Magazine : "He is a shaman on par with Väinämöinen- -and his operating system Linux is the Internet's most brilliant masterpiece". Torvald's decision to distribute Linux for free and reveal- -its underlying source code has made him a cult figure. Linus Torvalds, the computer genius who dreams of defeating Microsoft, actually Bill Gates. How's it going? There are those who say that Linus Torvalds has achieved a- -miracle. The worker ants are constantly in contact with each other by modems releasing code, encouraging feedback on modifications to create the best possible operating system in the world. San Jose, California I didn't want anybody else to have to go through the same thing I had to find something like Linux. Maybe some other computer science student needs his own operating system and he doesn't have to start from scratch. It wasn't a fight against the windmills. It wasn't Don Quixote against the world trying to make a better place. Come, come. Do you want food? I much prefer working with people over email than face to face. Else you tend to get into all these meaningless arguments and details. Over email you have to think a bit before you send off a reply. Just because we aren't at the same place doesn't mean that we aren't together in a social sense. It's like one very, very large shared office. We even have our arguments over the Internet in the same kind of way. This is a huge project. There's never been a software project that I know of that's been worked on by so many people from so many disperse places to put this all together. The most innovative thing about the Linux community is not its source code but the social machine that developed around it. What Linux is...? I suppose I would say... Every computer is different, every floppy disk drive is different every hard disk is different, every video controller is different... Linux is the thing that knows how to make all these different parts do the simple tasks like "write my file to the disk" or "read this file off this floppy I have", or "draw this image on the screen". Linux knows how to talk to these different pieces of hardware to make them do the common operations that we need computers to do. What do we mean when we say "Linux"? Some mean the whole operating system on which everything that happens in a computer weighs. Some say "Linux", pinpointing the single most important program - the kernel. It has to go back to the person who started it. To the person who somehow used the net to create a community of people who all felt that their contributions were being valued. That ability to foster cooperation could very well be something that can only come from a person raised in a country like Finland. Helsinki, Finland 1969 - it seems to have been such a good year. The moon landing, Woodstock, the birth of ARPANET, that led to Internet. The first steps of UNIX, the operating system for big computers and on December 28 Linus Torvalds is born. All children learn primarily through playing. For that reason I think it was very important for Linus to enter the computer world when computers still were simple enough even for a 10-12 year old boy to understand what was inside this machine. In today's world there's so many layers of information and complicated stuff between that which is shown on the computer screen and that which is inside the machine. It's difficult for the children of today to play their way to the insight the same way Linus did. I think it was love at first sight both for my father and for Linus who together were childishly excited, both of them, to try the possibilities that VIC-20 offered. The place where Linus developed Linux is no longer because the walls have been torn down. Here in the corner where the couch is is where Linus' desktop and computer, that he worked on, used to be. The biggest change is that he nowadays is a stand up-guru because he is used to perform in front of an audience and he can handle them. That might not be surprising, but still striking when compared with how he actually was: relatively shy and withdrawn, and not the one who got in touch, but his friends were the ones who kept in touch with him. Hello everybody out there using MINIX. I'm doing a free operating system. Just a hobby. Won't be big and professional- -like "GNU" for 386 and 486 AT clones. This has been brewing since April and is starting to get ready. I'd like any feedback on things people like or dislike in MINIX- -as my OS resembles it somewhat. Any suggestions are welcome- -but I won't promise I'll actually implement them. 1991 - The Soviet Union closes down. The Gulf War. The British physicist Tim Berners-Lee releases a hypertext system, calling it the "World Wide Web". Microsoft is well on the way for world domination. And on September 17 Linus Torvalds sends the first version of Linux, 0.01, to the world, via Internet. The first responses arrive within hours. "Linux was invented here" "University of Helsinki" We first heard whispers in the cafeteria An operating system was being developed and started to spread. We learned to know Linus better. His programming skills had already been noted here. Linus based Linux on UNIX, because of its basic ideals. The original UNIX operating system had been created by Ken Thompson and Dennis Ritchie at AT&T's Bell Labs in 1969. UNIX was in the beginning a relatively free operating system and very popular in the university circles. The philosophy is based on two notions: Firstly, everything is a file. Secondly, when you build something you write things that are for a single purpose but to do that purpose well. Putting Linux on the net was kind of natural in many ways. There were a lot of small reasons. Like the fact that I thought it was a good idea to make Linux available to others so that they could try it out and send comments back to me. He really had two choices. He could make it completely free or he can try and charge for it. Linux would not exist if he had tried to make profit out of it. Nobody would have bought it. It would have been a dead end. You haven't been here for a while. We've already installed the third version... We had difficulties to fit Linux-stuff into one computer. At first Linus didn't want to release Linux for free. He was thinking hard about what kind of copyright he would use. I persuaded him to release it under the GNU copyright. Especially, as the compiler I used was released under the GPL I eventually ended up using the GPL myself. The "GNU General Public License" (GPL) funded by the Free Software Foundation in the mid 1980's says that if you change and modify the code you have to make your changes and improvements freely available. The GPL hinders any one person to have a monopoly over an important piece of technology. I think the timing was good. Even just a year earlier I don't think it could've been done, and a year later someone would've done something similar. The Internet hadn't gotten to the general population but it was getting very strong in university networks. I'd done a mailing list program in the "C" programming language I had to expand it and add features. Rapidly thousands of people were interested. It was a surprise. The numbers doubled in short intervals. It was crazy. After 1000 people 2000, the next day 4000 people. Without Internet Linux development would've been like chess by mail. My name of choice was "FREAX". Which was both "free", "freak" plus the "X" that you need for UNIX. I didn't like the name FREAX. It wasn't very commercial... Ari Lemmke, who actually put Linux up for FTP, thought that it really was a bad idea. He really hated the name. He made the FTP site available and just called it Linux because that was the working name. The name stuck, and Linux is a much better name... "GEEKS" "NERDS" We have an impressive set of geeks and nerds here. The first question from the easy category: "How do you pronounce Linux?" Well, I pronounce Linux as "Linux". However, the total answer to that is if you're Linus Torvalds you probably pronounce it "Leenux". On the other hand, if you come from the west coast of the United States you pronounce it as "Lynix". And Linus said he doesn't care how you pronounce it as long as you just use it! It was in July of 1991 which was shortly after Linus had released the 0.09 version of the kernel that I started playing with Linux. Heard about it on, I think, Usenet. Downloaded it from Finland, started playing with it and thought it was really neat! At that point there was very limited trans-Atlantic Internet bandwidth so it was very painful to down load all these packages from Finland. And so I decided: "Well, we need to do something about this" and I set up a mirror archive of all the kernel sources on my private workstation. And that was the first US Linux FTP site that came into existence. The first time I got Linux was I downloaded the floppy images for Linux and in the Penn State University computer lab I installed it on one of their machines. They subsequently kicked me out of the computer lab that day but that was my first experience with Linux. Very early in 1992 suddenly I didn't know everybody anymore. That it was no longer me and a couple of friends. It was me and a couple of hundred people who I had no idea where they were, what they did with the system, and who they are. And that was a big step. University of Helsinki The 1.0 release in 1994 was certainly important and it meant a lot to me just because there was a lot of work behind it. It was certainly a landmark to commercial use of Linux. It was really hard to use Linux commercially before 1.0. Welcome to Linux operating system 1.0 press conference. Why is this kind of UNIX-like system done at all especially at the University of Helsinki? Because there exists, also for PC, UNIX operating systems but they are very expensive. For example, DOS costs about 200 marks. UNIX costs 20 000 marks. It's pretty much for a student to pay. Try going to a computer shop and ask for SCU-Unix. They will look at you as if you were mad. In fact, it is easier to write it yourself! The development process of Linux is odd. It's not a hierarchy, but everyone is free to suggest changes to the code. There's one person who leads, makes the big decisions, and chooses the best ideas: Linus - "the benevolent dictator". Everyone knew that someone had to be the head of this work group and Linus was the natural head, given that he did the original core Linux kernel and Linus was someone who was a very, very good leader. He's someone who's actually quite humble. He doesn't try to take credit for something he doesn't do. You want to have hundreds, thousands of people working on the kernel at the same time. But you don't want to have all these people stepping on each other's toes all the time because that way most of the time will be spent on resolving conflicts between people and you just have flame wars all the time. I used to think that there was this hierarchy where I was at the top and they were my lieutenants and I don't think it's that way anymore. It's more like a web of trust where I have people I trust, and they have people they trust. Well, there are lots of things that motivate developers! There's artistic pride, the satisfaction that you get from doing good craftsman-like work. There's the idealist feeling of being part of something larger and more important than you are. There's a desire to help the world and see that solutions happen. In the absence of monetary rewards most people, most of the time, are playing for a kind of reputation reward among their peers. One strength of the Linux development world is that practically every software author can be contacted directly by email. Ted Ts'o was crucial in the spread of Linux in the United States. To be fair, it's very easy to say: "If we were in charge we wouldn't do these things". But then again, we're not getting all these email messages saying: "Please, let me add this new feature!" So I don't know what I would actually do if I were really in charge. Dave Miller is a maintainer who reviews changes that developers want to make in the kernel. He is like a funnel between the contributors and "the king" Linus. The way that we work is... You can talk all day about a great idea or a solution to a problem, or something that you think is an interesting feature for Linux to have but you gotta show us something concrete. Show me a piece of code that does that. Something that's tangible that I can test myself so I can try it out and I can think about what it is. Instead of just talking abstractly about a topic all day. Alan Cox, a "renaissance hacker" is the closest collaborator to Linus. His right hand man. "What is Alan doing... The other side of the story" To me code has more in common with i.e. poetry or some kinds of writing. The beauty of it is in the structure, in putting ideas across one at a time in a clear way. So a good piece of code you read without comments and it's immediately obvious why it's been written, how it's elegant. So you're looking for code which is both clean and elegant. But also doesn't rely on clever programming tricks, doesn't make assumptions which may not be true in the future. Because the last thing we want to do is having much code in the Linux kernel which requires large amounts of effort to keep it working. We want code which will just continue to work, and work forever. Having led the Linux project for five years in Helsinki Linus was recruited to Silicon Valley, California. He wanted to see the other side of the world, the world of commerce, not just the academic side. "Edward Helmore talks to Linus Torvalds, Silicon Valley's brightest new star" You're quite an un-orthodox figure in the Silicon Valley world. What do they make of you there? You're not taking their crazy commercial part, if you like. "TRANSMETA" Linus started to work for a company called "Transmeta" A little Linux company, but a mysterious business that didn't want to tell, for many years, what it was up to. And paradoxically a closed source code company. The deal was that Linus could still concentrate on developing Linux. I have been forced into trying to be a poster boy for Linux and actually the whole open source community at large, even though I wasn't even the person who started open source. There's no single person that represents the whole story and there's no single starting point. I mean, it's like the bamboo: You don't know where it starts or where it ends. I don't think that this movement is actually new at all. It's been around for a long time. Even in the 1970's, the whole attitude that we had around UNIX even though technically it wasn't open source, it wasn't free, because you did need to go get this license from AT&T. Since that was not an issue generally, you could share things freely. When you run a program, typically you run the executable form which is a series of numbers and nobody can make any sense of them. Only a computer can understand them. That's what they're for. Those numbers are the form of a program that the computer can understand. For humans to figure out what they mean is very hard. When we write software we write it as source code, and it looks sort of like algebra. That's the form that you can understand if you're a programmer. To help you figure out there are usually lots and lots of comments which are explanations that are put into the source code to help other people figure out why the program is written the way it is. If you get just the executables, which is what Microsoft will probably give you even if you had the freedom to make changes you could never figure out what changes to make. It's too hard! For the freedom to change the software to be practical, and usable, you gotta have the source code. If you really look at the project... As I said, Linus developed the kernel but I think that the most interesting part here is really Richard Stallman began the movement. Have you heard of Richard Stallman? He wanted everyone to have the rights to use the software, to copy the software without breaking any laws. To make changes, distribute them, enhance the software. He wanted to give people rights! When he decided to overthrow corrupt American capitalism in the IT industry he quit his job and continued coding. Join us now and share the software MIT, Camebridge, Massachusetts You'll be free, hackers, you'll be free I tend to think of things in terms of justice, freedom and ethics. I announced the idea in November 1983 but it was in Januari 1984 that I quit my job at MIT to start developing a free operating system to which I gave the name "GNU". This is "GNU General Public License" and of course the kernel is under GPL... "Free software", I should explain, refers to freedom, not price. It's unfortunate that the word "free", in english, is ambiguous it has a number of different meanings. One of them means "zero price", but another meaning is "freedom". So think of "free speech", not "free beer". There's a similarity between the folk process where a poem or a song or a story can get refined and reshaped by one teller or singer after another and the way free software gets improved. You'll often find cases where a free program is being developed now by a group of people who include none of the original developers. In 1991 we had almost finished the GNU system. Our goal was to make an OS, like UNIX, but entirely free software. This complete operating system required many different components By 1991 we had almost all of those components. Many of them we had written, and many others we had found somebody else had written it for his own purposes but it did the job. And so we pressed it into service as a part of GNU. One major component was still missing: the component called the "kernel". So it was very useful that Linus Torvalds wrote a kernel. At that point, combining his kernel, Linux, with the larger GNU system produced a complete runnable system that you could actually put onto your PC and run. So once Linux was developed the GNU system in effect was completed! It began to catch on in popularity, but at the same time an unfortunate thing happened. The people who were using the GNU system didn't realize it was the GNU system. So they began calling the whole combination "Linux" and that confusion spread. As a result, it's very hard for us in the GNU project to call the user's attention to the ethical and political issues. Hoarders can get piles of money That is true, hackers, that is true But they cannot help their neighbor That's not good, hackers, that's not good Most computer science in the USA comes traditionally from military background and defense spending. Perhaps it isn't any more quirky that nowadays the "free software" movement finds room both for Richard Stallman and libertarian ideals. Many saw free software also as a new way of making money and needed a less radical concept. Enter: open source. "I want you to be an open source developer" We looked at the history of advocacy in what at the time was still mostly called the "free software" movement and we concluded that it hadn't worked! That in fact the rhetoric and the tactics used by Richard Stallman and the Free Software Foundation had left us worse off than we were when we started. The term "open source" doesn't really imply the political issues like it used to and the "free software" term still does. There's now a second movement, the "open source" movement where they consider only the practical benefits. They refuse, and I mean that literally... they carefully avoid the issues of principle, freedom, ethics and making a good society to live in. That kind of language is implicitly threatening to people whose day-to-day concerns are: "how do I increase my shareholder value?", "how do I keep control over my business?" How do I address my actual down-to-earth problems? When you walk into their offices and say "you should use all open source for your business because sharing is good and hoarding is evil" - it doesn't work! I am not against business. I don't believe in abolishing business. I do business myself. But I believe business should not dominate all of life. The rules of society should not be chosen primarily to please business. Early in 1998 the majority usage in the community went from "free software" to "open source" in six weeks flat. In the late spring or early summer of 1998. That told me that there had been huge pent-up demand in the community for a way of explaining what we were doing that was more effective. The whole attitude in the trade press and the investor community completely turned around! The same people who had spent years sneering dismissively at "free software" and talking about sandal-wearing freaks with long hair... Those very same people within a year were falling all over themselves to write laudatory articles about the wonders of open source and peer review. and this is really funny because it was the same software and in most cases the same people! "Robin Hood of the nerds" "Martin Luther, meet Linus Torvalds" Linux happened without the help of people with deep pockets- -or even despite the help. How can we keep from destroying the magic by pouring all this money into Linux? When Linux started to become commercialized people said: "oh well, we'd like to keep it as our own little project". "Nobody should be making any money off it". Well, in the real world people make money off things. The US is a capitalistic society and Europe is a capitalistic society. In order for companies to start using Linux they wanna have somebody sitting there, who can give them support, who can sell them the hardware. And these people who sell this hardware and support are going to make money. Not everyone of us is a hacker. Actually, very few of us would take the effort to download Linux from the net. Even fewer will tackle with the code itself in order to improve it. Though, Linux was hard to use, customers valued strongly its reliability and open source code. There was an opportunity for companies with new visions. "Red Hat" For Red Hat, it wasn't important that we ship a better operating system than Microsoft's or Sun Microsystems' It becomes really important that we ship an operating system that solves a problem for our customers that they cannot solve using the traditional proprietary "binary only" software. We were recognizing what we were doing was we were building technology and then giving it away! So we said: "Well, how do you make money doing this?" Of course, we would go to California, to Silicon Valley, and everyone said: "Well, you cannot make money in the software business by giving your technology away". We would come back and talk to our customers and we realized the only thing that kept our customers loyal was that we did give away our technology. For the very first time they had control over the technology they're using. The real value in most software products is the active maintainence down the line the continuing support relationship between the vendor and you. That's what gives software fundamentally the characteristics of the service industry rather than the manufacturing industry. Linux is flourishing in the Internet server appliance area. But because there has not been an easy-to-use software for home users it has only a small margin of the desktop market. The GNOME project, with its graphical interface tries to fill that gap. But hacker elitism still seems to follow Linux. Do you see who's here? It's a penguin! It's Tux, actually... Hi, Tux! When Linus Torvalds makes millionaires and billionaires- Bill Gates' hair turns grey... Microsoft has a very traditional model: They make closed source code, they put it on a CD, they sell that. They take on all the burden of development themselves. Everything goes back through them. Once you're in that business it's very hard to change your culture. It's very hard to change your business to one where you cooperate. It's easier to make money off closed source products if you don't need, or you have the huge market share. So, for example, Microsoft does not have a huge incentive to open source their code right now. And it would probably cut into their profits, so I don't think they're gonna do it, or at least not willingly. There's algorithms that you may in fact want to keep proprietary. For example, I know of certain compression algorithms that companies have put a lot of work into. For things like streaming media. And they don't want people to know how they do that because it's exactly how they do that that's the value of the product. Fighting between Linus, who's the leader of Linux, and Bill Gates who's the leader of Microsoft. It becomes really personal. Next, for our bizarre question: "Whose lips are these?" As an answer: Bill Gates' lips telling another lie... The acceptance of Linux has been helped enormously by the fact that people have known that Linux exists through the news. The "David versus Goliath" story helped there, but I don't think it's particularly true. "Microsoft's Ballmer claims Linux is communism" You are a socialist...? That's one of the labels that people put on me. Is that true? It's not a secret that I was a left wing radical in the late 1960's. Students' UN organization was behind most demonstrations. My personal belief system is more one of personal honour. I don't care what anybody else does... I want to do what I feel is right. Linus keeps a very strict distance to politics. I think he suffered slightly in his earliest childhood as his father was so active politically. It is also about having a social conscience and if you call that socialism then, yeah, I guess I'm socialist... He is radical within a very restricted area, where he sets the limits himself. He is very reluctant to take part in fuzzy political discourse and there's the difference between the pragmatist who wants to work with concrete stuff and not let the steam go out through his ears, like we used to do in the 1960's. This is a community. You can take but you must give back! I am very pleased to announce to you today the winner of this year's IDG/Linus Torvalds award is: Debian. It's good that the Linux community has been fairly positive towards new things, including the commercial aspects. Hi, I'm from Brazil, and I'd like to know what can we do to bring you to Brazil in May next year? Hey, are you coming to the VA party wednesday night? I will almost certainly be there, yes. But I need to go now... I'm hearing that you're going shooting? You come with us, man! Nooo... A lot of communities worry that these big enterprises, these big commercial vendors are not going to be able to give back to the community. The thing is that people expect other people to be nice and take care of things and I don't think that is true, and I don't think that it should be true and I think that the power of Linux is that even if nobody else helps you an inch of the way, you still have your own copy of Linux and you still have your own power to do whatever you want... I want to avoid the politics of Linux. I want to be somebody that everybody agrees is a nice guy and he doesn't bite! One last question? Sure! I'm from India. Do you get a lot of developers from India contributing to the kernel? Not that many. What is the message that you would like to give them so that you get more of them. I think one of the problems is just infrastructure. They don't even necessarily have Internet access, or have very slow access. I think that people are maybe not used to do this collaboration on the Internet. They're kind of nervous, right? Any message you wanna give them to motivate them to get more developers? I don't know what the issues are in India, but there are going to be issues. Like local issues that Indians want to be able to do things that the American continent doesn't care about at all. And I think that's really motivational when somebody says: "Hey, I can solve this! I can make my own version of Linux and it will be better for me as an Indian or whatever person". And that's how you should be motivated, and whatever I say you should not care! Thank you very much! You come down to India next time... I will try to... Do you want to take a picture for a Dutch magazine? Are you planning on coming to the Netherlands? The real value of Linux may be some where else than knocking Microsoft out. Linux was designed to run on a cheap hardware and to solve common problems. If you are poor it is a real alternative, free of charge. The Linux project started in Europe and the United States. But now, free software allows it to find ever more new programmers from new sources from regions where computing is still in its infancy. Beijing, China China is behind the developed countries in the IT industry. The gap is big and we try to catch up as fast we can. During this we have to borrow from other countries' experiences. We put a great importance on the operating system. We did some development work based on UNIX Due to tight market control we were not able to succeed. Linux provides us with a very good opportunity and a base to learn from advanced technology. "The Chinese Red Army delighted with Linux" I think that this is the greatest transfer of wealth we may have ever seen between the industrialized rich north, and put Europe and the United States together in that, and the third world! It's the open source. I think this is important to many people. I like philosophy, and I like to analyze matters from a philosophic perspective. The open source is in accordance with the spirit of science the free and unrestricted access to information. Nothing should be hidden. That's my first impression of Linux. The spirit could be expanded to other fields. I never feel that this only applies in the computer field. You have one of the most privileged classes in capitalism: programmers! They can make so much money from working as programmers that they have the time to devote to their own hobbies. Programmers like Alan Cox, they could name their price! Here are these people who are at the top of the heap, and through the structure of transfer of intellectual property they've come up with, they're transferring that wealth. It is socialism in action, even if the libertarians are horrified whenever that is mentioned. Open source projects have been compared to the way science is created. Science in itself doesn't make money The wealth comes as the result of applications. For the open source hackers developing Linux has traditionally been a science like voluntary project. A hobby. Eventually, the best Linux hackers were enlisted. In 1999, during the dot-com boom, some of the Linux companies went public. Wall Street announced record breaking value for Linux stock. Of course it didn't last, but for a period of time some Linux hackers were filthy rich - on paper. Just about everyone who was a core developer before all this whoopla about people making money doing Linux have kept to their values in taking these jobs. Most of the ones I keep in contact with, have a very crucial position and are pretty much doing all of the Linux work they were doing before they had the job with the same levels of freedom, as well. I still got changes from people every day I still submitted them to Linus, the same way I always did before the IPO. Some of us are driving nicer cars than beforehand. That's the only difference. Maybe we're eating a little bit more sushi. There are some people who got lucky, joined the right company at the right time. Managed to participate in the IPO lottery and there are some people who got millions of dollars, and there are some people who got billions of dollars! Did those people actually contribute more to the company than those other people? In some cases they just happened to contribute the right amount of investment money at the right time. I think that's a generic problem that's not unique to the open source community. I don't know if we actually have a good solution for that. Part of what I like about Silicon Valley is just that it's so dynamic, and you can do anything here. And even the money-grabbing approach. Even if it's slightly tasteless especially when you come from Europe, it's a really good motivational factor. It's a really good way of getting things done. Has it changed me? I assume so. I'm not the same person I was when I moved but I don't think it's made me all that more money-conscious than I used to be. 2001 - Imagined by Stanley Kubrick. In the most ambitious and grotesque PR stunt in history suicide hijackers blitz America with far-reaching consequences. IT recession affects also open source. No longer does Linus have to act in public all the time as an enlightened philosopher ruler, harassed by the media. With the coolness of Linux still intact the phenomenon disappears into gadgets. Invisible pieces of technology for households and entertainment industry. Gradually, many of us turn into Linux users when the code infiltrates our clocks, toasters and mobile phones. As for bigger ideals, it could be one of the greatest missed opportunities of our times if free software liberated nothing but code. There's no question that development of technology is just going to make Linux obsolete at some point. The question is just: "How long will it take?" Will it be in 5 years, or 15 years or will it be 50 years? I think one of the powers of open source is that in 50 years the next operating system that's the best at the time will be able to take advantage of the source base that Linux had. The source code itself is going to be the memory of Linux and people can always use that as a kind of blueprint. But there's more in that. There's also the intangible issues about why things were designed a certain way. I think those are out there even if I weren't out there... The Code - Story of Linux ©2001